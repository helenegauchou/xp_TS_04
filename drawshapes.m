function drawshapes(scrptr,shape,x,y,color)global_settings;switch shape        case 'tilted_line_left'        for D = - floor(settings.NUMBER_OF_DOTS/2) : floor(settings.NUMBER_OF_DOTS/2)            matrix_coordinates = [x - settings.DOTS_DIAMETER/2 - D * ((sind(settings.TILT_ANGLE_TARGET))*(settings.INTER_DOTS_DISTANCE+settings.DOTS_DIAMETER)),...                y + settings.DOTS_DIAMETER/2 - D * ((cosd(settings.TILT_ANGLE_TARGET))*(settings.INTER_DOTS_DISTANCE+settings.DOTS_DIAMETER)) - settings.DOTS_DIAMETER,...                x - settings.DOTS_DIAMETER/2 - D * ((sind(settings.TILT_ANGLE_TARGET))*(settings.INTER_DOTS_DISTANCE+settings.DOTS_DIAMETER)) + settings.DOTS_DIAMETER,...                y + settings.DOTS_DIAMETER/2 - D * ((cosd(settings.TILT_ANGLE_TARGET))*(settings.INTER_DOTS_DISTANCE+settings.DOTS_DIAMETER))];            Screen(scrptr,'FillOval',color,matrix_coordinates);        end            case 'tilted_line_right'        for D = - floor(settings.NUMBER_OF_DOTS/2) : floor(settings.NUMBER_OF_DOTS/2)            matrix_coordinates = [x - settings.DOTS_DIAMETER/2 - D * ((sind(-settings.TILT_ANGLE_TARGET))*(settings.INTER_DOTS_DISTANCE+settings.DOTS_DIAMETER)),...                y + settings.DOTS_DIAMETER/2 - D * ((cosd(-settings.TILT_ANGLE_TARGET))*(settings.INTER_DOTS_DISTANCE+settings.DOTS_DIAMETER)) - settings.DOTS_DIAMETER,...                x - settings.DOTS_DIAMETER/2 - D * ((sind(-settings.TILT_ANGLE_TARGET))*(settings.INTER_DOTS_DISTANCE+settings.DOTS_DIAMETER)) + settings.DOTS_DIAMETER,...                y + settings.DOTS_DIAMETER/2 - D * ((cosd(-settings.TILT_ANGLE_TARGET))*(settings.INTER_DOTS_DISTANCE+settings.DOTS_DIAMETER))];            Screen(scrptr,'FillOval',color,matrix_coordinates);        end            case 'vertical_line'        for D = - floor(settings.NUMBER_OF_DOTS/2) : floor(settings.NUMBER_OF_DOTS/2)            matrix_coordinates = [x - settings.DOTS_DIAMETER/2 - D * ((sind(settings.TILT_ANGLE_NON_TARGET))*(settings.INTER_DOTS_DISTANCE+settings.DOTS_DIAMETER)),...                y + settings.DOTS_DIAMETER/2 - D * ((cosd(settings.TILT_ANGLE_NON_TARGET))*(settings.INTER_DOTS_DISTANCE+settings.DOTS_DIAMETER)) - settings.DOTS_DIAMETER,...                x - settings.DOTS_DIAMETER/2 - D * ((sind(settings.TILT_ANGLE_NON_TARGET))*(settings.INTER_DOTS_DISTANCE+settings.DOTS_DIAMETER)) + settings.DOTS_DIAMETER,...                y + settings.DOTS_DIAMETER/2 - D * ((cosd(settings.TILT_ANGLE_NON_TARGET))*(settings.INTER_DOTS_DISTANCE+settings.DOTS_DIAMETER))];            Screen(scrptr,'FillOval',color,matrix_coordinates);        end            case 'disc'        Screen(scrptr,'FillOval',color,[x,y-4,x+4,y]);            case 'T_bar_left'        Screen(scrptr,'DrawLine',color,x+2*settings.LENGTH_SHORT_LINE/5,y,x+2*settings.LENGTH_SHORT_LINE/5,y-settings.LENGTH_LONG_LINE,settings.WIDTH_LINE);% vertical line LONG        Screen(scrptr,'DrawLine',color,x,y-settings.LENGTH_LONG_LINE,x+settings.LENGTH_SHORT_LINE,y-settings.LENGTH_LONG_LINE,settings.WIDTH_LINE); % horizontal SHORT            case 'T_bar_right'        Screen(scrptr,'DrawLine',color,x+3*settings.LENGTH_SHORT_LINE/5,y,x+3*settings.LENGTH_SHORT_LINE/5,y-settings.LENGTH_LONG_LINE,settings.WIDTH_LINE);% vertical line LONG        Screen(scrptr,'DrawLine',color,x,y-settings.LENGTH_LONG_LINE,x+settings.LENGTH_SHORT_LINE,y-settings.LENGTH_LONG_LINE,settings.WIDTH_LINE); % horizontal SHORT%             case 'T_bar_left'%         Screen(scrptr,'DrawLine',color,x+settings.LENGTH_SHORT_LINE/3,y,x+settings.LENGTH_SHORT_LINE/3,y-settings.LENGTH_LONG_LINE,settings.WIDTH_LINE);% vertical line LONG%         Screen(scrptr,'DrawLine',color,x,y-settings.LENGTH_LONG_LINE,x+settings.LENGTH_SHORT_LINE,y-settings.LENGTH_LONG_LINE,settings.WIDTH_LINE); % horizontal SHORT%         %     case 'T_bar_right'%         Screen(scrptr,'DrawLine',color,x+2*settings.LENGTH_SHORT_LINE/3,y,x+2*settings.LENGTH_SHORT_LINE/3,y-settings.LENGTH_LONG_LINE,settings.WIDTH_LINE);% vertical line LONG%         Screen(scrptr,'DrawLine',color,x,y-settings.LENGTH_LONG_LINE,x+settings.LENGTH_SHORT_LINE,y-settings.LENGTH_LONG_LINE,settings.WIDTH_LINE); % horizontal SHORT% %         %         case 'T_bar_left'%         Screen(scrptr,'DrawLine',color,x,y,x,y+settings.LENGTH_LONG_LINE,settings.WIDTH_LINE);% vertical line LONG%         Screen(scrptr,'DrawLine',color,x-settings.LENGTH_SHORT_LINE/3,y,x+2*settings.LENGTH_SHORT_LINE/3,y,settings.WIDTH_LINE); % horizontal SHORT%         %     case 'T_bar_right'%         Screen(scrptr,'DrawLine',color,x,y,x,y+settings.LENGTH_LONG_LINE,settings.WIDTH_LINE);%         Screen(scrptr,'DrawLine',color,x-2*settings.LENGTH_SHORT_LINE/3,y,x+settings.LENGTH_SHORT_LINE/3,y,settings.WIDTH_LINE);            case 'long_line'        Screen(scrptr,'DrawLine',color,x,y,x,y-settings.LENGTH_LONG_LINE,settings.WIDTH_LINE);            case 'short_line'        Screen(scrptr,'DrawLine',color,x,y,x,y-settings.LENGTH_SHORT_LINE,settings.WIDTH_LINE);    case 'circle'        Screen(scrptr,'FrameOval',color,[x-settings.CM, y-settings.CM, x+settings.CM, y+settings.CM],3);    endend